{"version":3,"sources":["config/endpoints.js","logo.svg","api/api.js","components/Header.js","components/Modal.js","containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["base","module","exports","Object","freeze","LOGIN","REGISTER","api","GET","params","config","cb","error","a","axios","get","url","res","data","POST","post","crossdomain","response","PUT","styles","banner","backgroundColor","display","justifyContent","paddingLeft","paddingRight","header","backgrounColor","color","float","user","fontSize","Header","props","CustomButton","withStyles","theme","root","Button","className","style","username","children","id","onClick","e","action","Modal","input","padding","useState","inputs","setInputs","handleInputChange","updatedInputs","target","value","modalInfo","Dialog","maxWidth","fullWidth","open","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","text","textAlign","responseText","push","TextField","label","variant","onChange","generateInputs","DialogActions","submitAction","autoFocus","submitText","Main","setOpen","setModalInfo","setResponseText","setUser","login","setTimeout","console","password","endpoints","register","status","currentTarget","App","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.55cff948.chunk.js","sourcesContent":["const base = 'http://localhost:5000/'\r\n\r\nmodule.exports = Object.freeze({\r\n    LOGIN: () => { return base + 'login' },\r\n    REGISTER: () => { return base + 'register' }\r\n});","export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import axios from 'axios';\r\n\r\nconst api = {\r\n    GET: async (params, config, cb, error) => {\r\n        try {\r\n            let res = await axios.get(params.url, config);\r\n            cb(res.data);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n    },\r\n\r\n    POST: async (params, data, cb, error) => {\r\n        try {\r\n            let res = await axios.post(params.url, data, { crossdomain: true });\r\n            cb(res.data);\r\n        } catch (e) {\r\n            error(e.response);\r\n        }\r\n    },\r\n\r\n    PUT: async (params, cb, error) => {\r\n\r\n    }\r\n}\r\n\r\nexport default api;","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { React } from 'react';\r\n\r\nfunction Header(props) {\r\n\r\n    const CustomButton = withStyles((theme) => ({\r\n        root: {\r\n            color: 'white'\r\n        }\r\n    }))(Button); \r\n\r\n    return (\r\n        <div className='row' style={styles.banner}>\r\n            <h1 style={styles.header}>Apollo UI\r\n                <div style={styles.user}>{props.username}</div>\r\n            </h1>\r\n            {props.children}\r\n            <div className='row' style={{ backgroundColor: '#282c34', display: 'inline-flex' }}>\r\n                <CustomButton\r\n                    color='primary'\r\n                    id='register'\r\n                    onClick={(e) => props.action(e)}\r\n                >\r\n                    Register\r\n                </CustomButton>\r\n                <CustomButton \r\n                    color='primary'\r\n                    id='login'\r\n                    onClick={(e) => props.action(e)}\r\n                >\r\n                    Login\r\n                </CustomButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    banner: {\r\n        backgroundColor: '#282c34',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '20px',\r\n        paddingRight: '20px'\r\n    },\r\n    header: {\r\n        backgrounColor: '#282c34',\r\n        color: 'white',\r\n        float: 'right'\r\n    },\r\n    user: {\r\n        color: '#61dafb',\r\n        display: 'inline',\r\n        fontSize: 11,\r\n        paddingLeft: '10px'\r\n    }\r\n}\r\n\r\nexport default Header;","import { React, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Modal(props) {\r\n\r\n    const styles = {\r\n        input: {\r\n            padding: '10px'\r\n        }\r\n    };\r\n\r\n    const [inputs, setInputs] = useState({});\r\n\r\n    const generateInputs = () => {\r\n        let inputs = [];\r\n        for (let input of props.modalInfo.inputs) {\r\n            inputs.push(\r\n                <TextField \r\n                    id={input.id} \r\n                    label={input.label} \r\n                    variant='outlined'\r\n                    style={styles.input}\r\n                    value={inputs.id}\r\n                    onChange={handleInputChange}\r\n                />\r\n            )\r\n        }\r\n\r\n        return inputs;\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        let updatedInputs = { ...inputs };\r\n        updatedInputs[e.target.id] = e.target.value;\r\n        setInputs(updatedInputs);\r\n    };\r\n\r\n    return (\r\n        props.modalInfo ? <div>\r\n            <Dialog\r\n                maxWidth={'lg'}\r\n                fullWidth={true}\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n            >\r\n                <DialogTitle id='alert-dialog-title'>{props.modalInfo.header}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id='alert-dialog-description'>\r\n                        {props.modalInfo.text}  \r\n                        <div style={{textAlign: 'center'}}>\r\n                            {props.responseText}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                {generateInputs()}\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={() => props.modalInfo.submitAction(inputs)} \r\n                        color='primary' \r\n                        autoFocus\r\n                    >\r\n                        {props.modalInfo.submitText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div> : ''\r\n    );\r\n}","import api from '../api/api';\r\nimport '../App.css';\r\nimport endpoints from '../config/endpoints';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport { useState } from 'react';\r\n\r\nexport default function Main() {\r\n    const [open, setOpen] = useState(false);\r\n    const [modalInfo, setModalInfo] = useState();\r\n    const [responseText, setResponseText] = useState();\r\n    const [user, setUser] = useState(null);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setResponseText('');\r\n    };\r\n\r\n    const login = async (inputs) => {\r\n\r\n        const cb = (res) => {\r\n            setUser(res);\r\n            setResponseText('Login successful');\r\n            setTimeout(() => handleClose(), 1000);\r\n        }\r\n\r\n        const error = (e) => {\r\n            console.error(e);\r\n            setResponseText('Invalid username or password')\r\n        }\r\n        \r\n        let data = {\r\n            user: inputs.username,\r\n            password: inputs.password\r\n        }\r\n\r\n        await api.POST({ url: endpoints.LOGIN() }, data, cb, error);\r\n    };\r\n\r\n    const register = async (inputs) => {\r\n        const cb = (res) => {\r\n            setResponseText(`Registration successful`);\r\n            setUser(res);\r\n            setTimeout(() => handleClose(), 1000);\r\n        };\r\n\r\n        const error = (e) => {\r\n            if (e.status === 500)\r\n                setResponseText('User already exists');\r\n            else\r\n                setResponseText(e.status)\r\n        };\r\n\r\n        await api.POST({ url: endpoints.REGISTER() }, { user: inputs.username, password: inputs.password }, cb, error);\r\n    };\r\n\r\n    const headerClick = (e) => {\r\n\r\n        switch (e.currentTarget.id) {\r\n            case 'register':\r\n                setModalInfo({\r\n                    header: 'Register',\r\n                    submitText: 'Submit',\r\n                    inputs: [\r\n                        { id: 'username', label: 'Username' },\r\n                        { id: 'password', label: 'Password' }\r\n                    ],\r\n                    submitAction: register\r\n                });\r\n                setOpen(true);\r\n                break;\r\n            case 'login':\r\n                setModalInfo({\r\n                    text: 'Enter your username and token',\r\n                    header: 'Login',\r\n                    submitText: 'Login',\r\n                    inputs: [\r\n                        { id: 'username', label: 'Username' },\r\n                        { id: 'password', label: 'Password' }\r\n                    ],\r\n                    submitAction: login\r\n                });\r\n                setOpen(true);\r\n                break;\r\n            default:\r\n                setOpen(true);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                action={headerClick}\r\n                username={user?.username}\r\n            >\r\n            </Header>\r\n            <Modal \r\n                open={open}\r\n                handleClose={handleClose}\r\n                modalInfo={modalInfo}\r\n                responseText={responseText}\r\n            />\r\n        </div>\r\n    );\r\n};","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './containers/Main';\r\n\r\nfunction App() {\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n      <Main />\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}