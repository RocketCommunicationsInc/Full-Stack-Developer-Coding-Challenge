{"ast":null,"code":"import { LitElement, html } from 'lit-element'; // eslint-disable-next-line no-unused-vars\n\nimport { RuxIcon } from '../rux-icon/rux-icon.js';\nexport class RuxButton extends LitElement {\n  static get properties() {\n    return {\n      size: {\n        type: String\n      },\n      icon: {\n        type: String\n      },\n      iconOnly: {\n        type: Boolean\n      },\n      disabled: {\n        type: Boolean\n      },\n      outline: {\n        type: Boolean\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.size = '';\n    this.icon = '', this.iconOnly = false;\n    this.disabled = false;\n    this.outline = false;\n  }\n\n  render() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n\n        *[hidden] {\n          display: none !important;\n        }\n\n        .rux-button-group {\n          display: flex;\n        }\n\n        .rux-button-group rux-button:not(:last-child),\n        .rux-button-group .rux-button:not(:last-child) {\n          margin-right: 0.625rem;\n        }\n\n        /* Global Button Styles */\n        .rux-button {\n          display: flex;\n          position: relative;\n\n          margin: 0;\n          padding: 0 1rem;\n\n          height: 2.125rem;\n          min-width: 2.25rem;\n          /* max-width: 10.125rem; */\n\n          border-radius: var(--buttonBorderRadius);\n\n          color: var(--buttonTextColor);\n          font-family: var(--fontFamily);\n          font-size: 1rem;\n\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n\n          justify-content: center;\n          align-items: center;\n\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        /* \n          \n          Disabled States\n        \n        */\n        /* disabled state */\n        .rux-button[disabled] {\n          opacity: var(--disabledOpacity);\n          cursor: var(--disabledCursor);\n        }\n\n        .rux-button[disabled]:focus {\n          outline: none;\n        }\n        .rux-button:not(.rux-button--outline) {\n          border: 1px solid var(--buttonBorderColor);\n          background-color: var(--buttonBackgroundColor);\n        }\n\n        /* Outline Button Specific Styles */\n        .rux-button--outline {\n          color: var(--buttonOutlineTextColor);\n          background-color: var(--buttonOutlineBackgroundColor);\n          border: 1px solid var(--buttonOutlineBorderColor);\n        }\n\n        /* \n          \n          Press/Active States\n        \n        */\n        .rux-button:active:not([hover]):not([disabled]) {\n          border-color: var(--buttonActiveBorderColor) !important;\n          background-color: var(--buttonActiveBackgroundColor) !important;\n        }\n        \n        .rux-button--outline:active:not([hover]):not([disabled]) {\n          border-color: var(--buttonOutlineBorderColor) !important;\n          background-color: var(--buttonOutlineBackgroundColor) !important;\n        }\n\n\n        /* \n          \n          Hover States\n        \n        */\n        .rux-button:hover:not([active]):not([disabled]):not(.rux-button--outline) {\n          border-color: var(--buttonHoverBorderColor);\n          background-color: var(--buttonHoverBackgroundColor);\n\t\t\t\t}\n\n        .rux-button--outline:hover:not([disabled]) {\n          color: var(--buttonOutlineHoverTextColor);\n          background-color: var(--buttonOutlineHoverBackgroundColor);\n          border-color: var(--buttonOutlineHoverBorderColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button:hover rux-icon {\n\t\t\t\t\tfill: var(--buttonHoverTextColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button--outline:hover rux-icon {\n\t\t\t\t\tfill: var(--buttonOutlineHoverTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button--outline:hover ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonOutlineHoverTextColor);\n\t\t\t\t}\n\t\t\t\t\n\n        /* \n          \n          Icons\n        \n        */\n\n        .rux-button--small {\n          font-size: var(--smallLabelTextSize);\n          height: 1.625rem;\n          padding: 0 1rem;\n          line-height: 1;\n        }\n\n        .rux-button--large {\n          font-size: var(--largeLabelTextSize);\n          height: 2.875rem;\n          min-width: 3rem;\n          padding: 0 1rem;\n        }\n\n        ::slotted(rux-icon),\n        rux-icon {\n          height: 1.5rem;\n          width: 1.5rem;\n\n          margin-right: 0.625rem;\n          margin-left: -0.625rem;\n        }\n        .rux-button--icon-only {\n          font-size: 0;\n        }\n        .rux-button--icon-only ::slotted(rux-icon),\n        .rux-button--icon-only rux-icon {\n          margin-left: -0.625rem;\n          margin-right: -0.625rem;\n        }\n\n        .rux-button--large.rux-button--icon-only ::slotted(rux-icon),\n        .rux-button--large.rux-button--icon-only rux-icon {\n          margin-left: -1rem;\n          margin-right: -1rem;\n        }\n        .rux-button--small.rux-button--icon-only {\n          min-width: 1.625rem;\n          padding: 0 0.75rem;\n        }\n\n        .rux-button--small ::slotted(rux-icon),\n        .rux-button--small rux-icon {\n          height: 0.875rem;\n          width: 0.875rem;\n        }\n\n        .rux-button--large ::slotted(rux-icon),\n        .rux-button--large rux-icon {\n          height: 1.75rem;\n          width: 1.75rem;\n          margin-left: -0.8rem;\n          /* margin: -0.65rem 0.25rem -0.3rem calc((1.5rem - 0.625rem) * -1); */\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.rux-button rux-icon {\n\t\t\t\t\tfill: var(--buttonTextColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button--outline rux-icon,\n\t\t\t\t.rux-button--outline rux-icon svg > use {\n\t\t\t\t\tfill: var(--buttonOutlineTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button--outline ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonOutlineTextColor);\n\t\t\t\t}\n\n      </style>\n\n      <button\n        class=\"rux-button\n          ${this.size ? `rux-button--${this.size}` : ''} \n          ${this.iconOnly ? `rux-button--icon-only` : ''} \n          ${this.outline ? 'rux-button--outline' : ''}\"\n        ?disabled=\"${this.disabled}\"\n      >\n        <rux-icon\n          icon=\"${this.icon}\"\n          color=\"${this.outline ? 'var(--buttonOutlineTextColor)' : 'var(--buttonTextColor)'}\"\n          ?hidden=\"${!this.icon}\"\n        ></rux-icon>\n        <slot></slot>\n      </button>\n    `;\n  }\n\n}\ncustomElements.define('rux-button', RuxButton);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/components/rux-button/rux-button.js"],"names":["LitElement","html","RuxIcon","RuxButton","properties","size","type","String","icon","iconOnly","Boolean","disabled","outline","constructor","render","customElements","define"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,aAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAO,MAAMC,SAAN,SAAwBH,UAAxB,CAAmC;AACnB,aAAVI,UAAU,GAAG;AACtB,WAAO;AACLC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OADD;AAELC,MAAAA,IAAI,EAAE;AAAEF,QAAAA,IAAI,EAAEC;AAAR,OAFD;AAGLE,MAAAA,QAAQ,EAAE;AAAEH,QAAAA,IAAI,EAAEI;AAAR,OAHL;AAILC,MAAAA,QAAQ,EAAE;AAAEL,QAAAA,IAAI,EAAEI;AAAR,OAJL;AAKLE,MAAAA,OAAO,EAAE;AAAEN,QAAAA,IAAI,EAAEI;AAAR;AALJ,KAAP;AAOD;;AACDG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKR,IAAL,GAAY,EAAZ;AACC,SAAKG,IAAL,GAAY,EAAb,EAAmB,KAAKC,QAAL,GAAgB,KAAnC;AACA,SAAKE,QAAL,GAAgB,KAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAOb,IAAK;AACha,eAAc,KAAKA,IAAK,EAArC,GAAyC,EAAG;AACxD,YAAY,KAAKI,QAAL,GAAiB,uBAAjB,GAA0C,EAAG;AACzD,YAAY,KAAKG,OAAL,GAAe,qBAAf,GAAuC,EAAG;AACtD,qBAAqB,KAAKD,QAAS;AACnC;AACA;AACA,kBAAkB,KAAKH,IAAK;AAC5B,mBAAmB,KAAKI,OAAL,GAAe,+BAAf,GAAiD,wBAAyB;AAC7F,qBAAqB,CAAC,KAAKJ,IAAK;AAChC;AACA;AACA;AACA,KApNI;AAqND;;AAxOuC;AA0O1CO,cAAc,CAACC,MAAf,CAAsB,YAAtB,EAAoCb,SAApC","sourcesContent":["import { LitElement, html } from 'lit-element';\n// eslint-disable-next-line no-unused-vars\nimport { RuxIcon } from '../rux-icon/rux-icon.js';\nexport class RuxButton extends LitElement {\n  static get properties() {\n    return {\n      size: { type: String },\n      icon: { type: String },\n      iconOnly: { type: Boolean },\n      disabled: { type: Boolean },\n      outline: { type: Boolean },\n    };\n  }\n  constructor() {\n    super();\n    this.size = '';\n    (this.icon = ''), (this.iconOnly = false);\n    this.disabled = false;\n    this.outline = false;\n  }\n\n  render() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n        }\n\n        *[hidden] {\n          display: none !important;\n        }\n\n        .rux-button-group {\n          display: flex;\n        }\n\n        .rux-button-group rux-button:not(:last-child),\n        .rux-button-group .rux-button:not(:last-child) {\n          margin-right: 0.625rem;\n        }\n\n        /* Global Button Styles */\n        .rux-button {\n          display: flex;\n          position: relative;\n\n          margin: 0;\n          padding: 0 1rem;\n\n          height: 2.125rem;\n          min-width: 2.25rem;\n          /* max-width: 10.125rem; */\n\n          border-radius: var(--buttonBorderRadius);\n\n          color: var(--buttonTextColor);\n          font-family: var(--fontFamily);\n          font-size: 1rem;\n\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n\n          justify-content: center;\n          align-items: center;\n\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n\n        /* \n          \n          Disabled States\n        \n        */\n        /* disabled state */\n        .rux-button[disabled] {\n          opacity: var(--disabledOpacity);\n          cursor: var(--disabledCursor);\n        }\n\n        .rux-button[disabled]:focus {\n          outline: none;\n        }\n        .rux-button:not(.rux-button--outline) {\n          border: 1px solid var(--buttonBorderColor);\n          background-color: var(--buttonBackgroundColor);\n        }\n\n        /* Outline Button Specific Styles */\n        .rux-button--outline {\n          color: var(--buttonOutlineTextColor);\n          background-color: var(--buttonOutlineBackgroundColor);\n          border: 1px solid var(--buttonOutlineBorderColor);\n        }\n\n        /* \n          \n          Press/Active States\n        \n        */\n        .rux-button:active:not([hover]):not([disabled]) {\n          border-color: var(--buttonActiveBorderColor) !important;\n          background-color: var(--buttonActiveBackgroundColor) !important;\n        }\n        \n        .rux-button--outline:active:not([hover]):not([disabled]) {\n          border-color: var(--buttonOutlineBorderColor) !important;\n          background-color: var(--buttonOutlineBackgroundColor) !important;\n        }\n\n\n        /* \n          \n          Hover States\n        \n        */\n        .rux-button:hover:not([active]):not([disabled]):not(.rux-button--outline) {\n          border-color: var(--buttonHoverBorderColor);\n          background-color: var(--buttonHoverBackgroundColor);\n\t\t\t\t}\n\n        .rux-button--outline:hover:not([disabled]) {\n          color: var(--buttonOutlineHoverTextColor);\n          background-color: var(--buttonOutlineHoverBackgroundColor);\n          border-color: var(--buttonOutlineHoverBorderColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button:hover rux-icon {\n\t\t\t\t\tfill: var(--buttonHoverTextColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button--outline:hover rux-icon {\n\t\t\t\t\tfill: var(--buttonOutlineHoverTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button--outline:hover ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonOutlineHoverTextColor);\n\t\t\t\t}\n\t\t\t\t\n\n        /* \n          \n          Icons\n        \n        */\n\n        .rux-button--small {\n          font-size: var(--smallLabelTextSize);\n          height: 1.625rem;\n          padding: 0 1rem;\n          line-height: 1;\n        }\n\n        .rux-button--large {\n          font-size: var(--largeLabelTextSize);\n          height: 2.875rem;\n          min-width: 3rem;\n          padding: 0 1rem;\n        }\n\n        ::slotted(rux-icon),\n        rux-icon {\n          height: 1.5rem;\n          width: 1.5rem;\n\n          margin-right: 0.625rem;\n          margin-left: -0.625rem;\n        }\n        .rux-button--icon-only {\n          font-size: 0;\n        }\n        .rux-button--icon-only ::slotted(rux-icon),\n        .rux-button--icon-only rux-icon {\n          margin-left: -0.625rem;\n          margin-right: -0.625rem;\n        }\n\n        .rux-button--large.rux-button--icon-only ::slotted(rux-icon),\n        .rux-button--large.rux-button--icon-only rux-icon {\n          margin-left: -1rem;\n          margin-right: -1rem;\n        }\n        .rux-button--small.rux-button--icon-only {\n          min-width: 1.625rem;\n          padding: 0 0.75rem;\n        }\n\n        .rux-button--small ::slotted(rux-icon),\n        .rux-button--small rux-icon {\n          height: 0.875rem;\n          width: 0.875rem;\n        }\n\n        .rux-button--large ::slotted(rux-icon),\n        .rux-button--large rux-icon {\n          height: 1.75rem;\n          width: 1.75rem;\n          margin-left: -0.8rem;\n          /* margin: -0.65rem 0.25rem -0.3rem calc((1.5rem - 0.625rem) * -1); */\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.rux-button rux-icon {\n\t\t\t\t\tfill: var(--buttonTextColor);\n\t\t\t\t}\n\n\t\t\t\t.rux-button--outline rux-icon,\n\t\t\t\t.rux-button--outline rux-icon svg > use {\n\t\t\t\t\tfill: var(--buttonOutlineTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonTextColor);\n\t\t\t\t}\n\t\t\t\t.rux-button--outline ::slotted(rux-icon){\n\t\t\t\t\tfill: var(--buttonOutlineTextColor);\n\t\t\t\t}\n\n      </style>\n\n      <button\n        class=\"rux-button\n          ${this.size ? `rux-button--${this.size}` : ''} \n          ${this.iconOnly ? `rux-button--icon-only` : ''} \n          ${this.outline ? 'rux-button--outline' : ''}\"\n        ?disabled=\"${this.disabled}\"\n      >\n        <rux-icon\n          icon=\"${this.icon}\"\n          color=\"${this.outline ? 'var(--buttonOutlineTextColor)' : 'var(--buttonTextColor)'}\"\n          ?hidden=\"${!this.icon}\"\n        ></rux-icon>\n        <slot></slot>\n      </button>\n    `;\n  }\n}\ncustomElements.define('rux-button', RuxButton);\n"]},"metadata":{},"sourceType":"module"}