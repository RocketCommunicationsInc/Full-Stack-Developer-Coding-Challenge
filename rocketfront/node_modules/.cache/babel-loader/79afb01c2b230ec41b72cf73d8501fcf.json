{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/AlertsActions\";\nimport AlertInfo from \"./AlertInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AlertDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSingleAlert = alertObj => {\n      return /*#__PURE__*/_jsxDEV(AlertInfo, {\n        id: alertObj.errorId,\n        errorMessage: alertObj.errorMessage,\n        errorCategory: alertObj.errorCategory,\n        errorTime: alertObj.errorTime\n      }, alertObj.errorId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.state = {\n      alerts: []\n    };\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.getAlerts();\n    }\n  }\n\n  renderAlerts() {\n    return this.props.alerts.map(this.renderSingleAlert);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alerts\",\n      children: this.renderAlerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    alerts: state.alerts\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    getAlerts: info => dispatch(getAlerts(info))\n  };\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js"],"names":["React","Component","Redirect","Link","connect","getAlerts","AlertInfo","AlertDisplay","constructor","props","renderSingleAlert","alertObj","errorId","errorMessage","errorCategory","errorTime","state","alerts","componentDidMount","prevProps","renderAlerts","map","render","mSTP","mDTP","dispatch","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAiBnBC,iBAjBmB,GAiBEC,QAAD,IAAc;AACjC,0BACC,QAAC,SAAD;AAEC,QAAA,EAAE,EAAEA,QAAQ,CAACC,OAFd;AAGC,QAAA,YAAY,EAAED,QAAQ,CAACE,YAHxB;AAIC,QAAA,aAAa,EAAEF,QAAQ,CAACG,aAJzB;AAKC,QAAA,SAAS,EAAEH,QAAQ,CAACI;AALrB,SACMJ,QAAQ,CAACC,OADf;AAAA;AAAA;AAAA;AAAA,cADD;AASA,KA3BkB;;AAElB,SAAKI,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKV,KAAL,KAAeU,SAAnB,EAA8B;AAC7B,WAAKV,KAAL,CAAWJ,SAAX;AACA;AACD;;AAEDe,EAAAA,YAAY,GAAG;AACd,WAAO,KAAKX,KAAL,CAAWQ,MAAX,CAAkBI,GAAlB,CAAsB,KAAKX,iBAA3B,CAAP;AACA;;AAcDY,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,gBAAkB,KAAKF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAhCmC;;AAmCrC,MAAMG,IAAI,GAAIP,KAAD,IAAW;AACvB,SAAO;AACNC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADR,GAAP;AAGA,CAJD;;AAMA,MAAMO,IAAI,GAAIC,QAAD,IAAc;AAC1B,SAAO;AACNpB,IAAAA,SAAS,EAAGqB,IAAD,IAAUD,QAAQ,CAACpB,SAAS,CAACqB,IAAD,CAAV;AADvB,GAAP;AAGA,CAJD;;AAMA,eAAetB,OAAO,CAACmB,IAAD,EAAOC,IAAP,CAAP,CAAoBjB,YAApB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/AlertsActions\";\nimport AlertInfo from \"./AlertInfo\";\n\nclass AlertDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\talerts: [],\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getAlerts();\n\t\t}\n\t}\n\n\trenderAlerts() {\n\t\treturn this.props.alerts.map(this.renderSingleAlert);\n\t}\n\n\trenderSingleAlert = (alertObj) => {\n\t\treturn (\n\t\t\t<AlertInfo\n\t\t\t\tkey={alertObj.errorId}\n\t\t\t\tid={alertObj.errorId}\n\t\t\t\terrorMessage={alertObj.errorMessage}\n\t\t\t\terrorCategory={alertObj.errorCategory}\n\t\t\t\terrorTime={alertObj.errorTime}\n\t\t\t/>\n\t\t);\n\t};\n\n\trender() {\n\t\treturn <div id=\"alerts\">{this.renderAlerts}</div>;\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\talerts: state.alerts,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetAlerts: (info) => dispatch(getAlerts(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);\n"]},"metadata":{},"sourceType":"module"}