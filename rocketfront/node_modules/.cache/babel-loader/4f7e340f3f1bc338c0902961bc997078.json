{"ast":null,"code":"import { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\nimport * as Cookies from \"js-cookie\";\nexport const signup = userData => {\n  return dispatch => {\n    fetch(\"http://localhost:3001/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        user: userData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data.error);\n\n      if (data.error && data.error !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: false,\n            errors: [data.error]\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const login = userData => {\n  return dispatch => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(userData)\n    }).then(resp => resp.json()).then(data => {\n      console.log(data);\n\n      if (data.error && data.error !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: false,\n            errors: data.error\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const checkLoggedIn = () => {\n  return dispatch => {\n    fetch(`http://localhost:3001/logged_in`, {\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => {\n      if (data.error && data.error !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: data.logged_in,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT,\n      payload: {\n        loggedIn: false,\n        currentUser: {}\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js"],"names":["LOGOUT","AUTH_SUCCESS","AUTH_FAILURE","RuxModal","Cookies","signup","userData","dispatch","fetch","method","headers","credentials","body","JSON","stringify","user","then","res","json","data","console","log","error","type","payload","loggedIn","errors","currentUser","login","resp","checkLoggedIn","logged_in","logout"],"mappings":"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","sourcesContent":["import { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\nimport * as Cookies from \"js-cookie\";\n\nexport const signup = (userData) => {\n\treturn (dispatch) => {\n\t\tfetch(\"http://localhost:3001/users\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify({ user: userData }),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data.error);\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: false,\n\t\t\t\t\t\t\terrors: [data.error],\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const login = (userData) => {\n\treturn (dispatch) => {\n\t\tfetch(\"http://localhost:3001/user\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify(userData),\n\t\t})\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: false,\n\t\t\t\t\t\t\terrors: data.error,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const checkLoggedIn = () => {\n\treturn (dispatch) => {\n\t\tfetch(`http://localhost:3001/logged_in`, {\n\t\t\tcredentials: \"include\",\n\t\t})\n\t\t\t.then((res) => res.json())\n\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: data.logged_in,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const logout = () => {\n\treturn (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: LOGOUT,\n\t\t\tpayload: {\n\t\t\t\tloggedIn: false,\n\t\t\t\tcurrentUser: {},\n\t\t\t},\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}