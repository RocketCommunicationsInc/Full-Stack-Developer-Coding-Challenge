{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/* eslint-disable @typescript-eslint/typedef */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\n\nvar States;\n\n(function (States) {\n  /** Pending */\n  States[\"PENDING\"] = \"PENDING\";\n  /** Resolved / OK */\n\n  States[\"RESOLVED\"] = \"RESOLVED\";\n  /** Rejected / Error */\n\n  States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\n\n\nvar SyncPromise =\n/** @class */\nfunction () {\n  function SyncPromise(executor) {\n    var _this = this;\n\n    this._state = States.PENDING;\n    this._handlers = [];\n    /** JSDoc */\n\n    this._resolve = function (value) {\n      _this._setResult(States.RESOLVED, value);\n    };\n    /** JSDoc */\n\n\n    this._reject = function (reason) {\n      _this._setResult(States.REJECTED, reason);\n    };\n    /** JSDoc */\n\n\n    this._setResult = function (state, value) {\n      if (_this._state !== States.PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        value.then(_this._resolve, _this._reject);\n        return;\n      }\n\n      _this._state = state;\n      _this._value = value;\n\n      _this._executeHandlers();\n    }; // TODO: FIXME\n\n    /** JSDoc */\n\n\n    this._attachHandler = function (handler) {\n      _this._handlers = _this._handlers.concat(handler);\n\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n\n\n    this._executeHandlers = function () {\n      if (_this._state === States.PENDING) {\n        return;\n      }\n\n      var cachedHandlers = _this._handlers.slice();\n\n      _this._handlers = [];\n      cachedHandlers.forEach(function (handler) {\n        if (handler.done) {\n          return;\n        }\n\n        if (_this._state === States.RESOLVED) {\n          if (handler.onfulfilled) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            handler.onfulfilled(_this._value);\n          }\n        }\n\n        if (_this._state === States.REJECTED) {\n          if (handler.onrejected) {\n            handler.onrejected(_this._value);\n          }\n        }\n\n        handler.done = true;\n      });\n    };\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n\n\n  SyncPromise.resolve = function (value) {\n    return new SyncPromise(function (resolve) {\n      resolve(value);\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.reject = function (reason) {\n    return new SyncPromise(function (_, reject) {\n      reject(reason);\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.all = function (collection) {\n    return new SyncPromise(function (resolve, reject) {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(\"Promise.all requires an array as input.\"));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      var counter = collection.length;\n      var resolvedCollection = [];\n      collection.forEach(function (item, index) {\n        SyncPromise.resolve(item).then(function (value) {\n          resolvedCollection[index] = value;\n          counter -= 1;\n\n          if (counter !== 0) {\n            return;\n          }\n\n          resolve(resolvedCollection);\n        }).then(null, reject);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      _this._attachHandler({\n        done: false,\n        onfulfilled: function (result) {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result);\n            return;\n          }\n\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: function (reason) {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        }\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.catch = function (onrejected) {\n    return this.then(function (val) {\n      return val;\n    }, onrejected);\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.finally = function (onfinally) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      var val;\n      var isRejected;\n      return _this.then(function (value) {\n        isRejected = false;\n        val = value;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }, function (reason) {\n        isRejected = true;\n        val = reason;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(function () {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.toString = function () {\n    return '[object SyncPromise]';\n  };\n\n  return SyncPromise;\n}();\n\nexport { SyncPromise };","map":{"version":3,"sources":["../src/syncpromise.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}