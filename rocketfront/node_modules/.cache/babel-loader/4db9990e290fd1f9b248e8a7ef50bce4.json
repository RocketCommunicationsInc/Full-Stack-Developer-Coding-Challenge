{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSatellites } from \"../redux/actions/SatellitesActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SatDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      satellites: []\n    };\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.getSatellites();\n    }\n  }\n\n  convertTime(time) {\n    let convTime = new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    }).format(time);\n    return convTime;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-zone grid-zone--main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    satellites: state.satellites.satellites\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    getSatellites: info => dispatch(getSatellites(info))\n  };\n};\n\nexport default connect(mSTP, mDTP)(SatDisplay);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js"],"names":["React","Component","connect","getSatellites","SatDisplay","constructor","props","state","satellites","componentDidMount","prevProps","convertTime","time","convTime","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","render","mSTP","mDTP","dispatch","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,oCAA9B;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE;AADA,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKJ,KAAL,KAAeI,SAAnB,EAA8B;AAC7B,WAAKJ,KAAL,CAAWH,aAAX;AACA;AACD;;AAEDQ,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,QAAIC,QAAQ,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC/CC,MAAAA,IAAI,EAAE,SADyC;AAE/CC,MAAAA,KAAK,EAAE,SAFwC;AAG/CC,MAAAA,GAAG,EAAE,SAH0C;AAI/CC,MAAAA,IAAI,EAAE,SAJyC;AAK/CC,MAAAA,MAAM,EAAE,SALuC;AAM/CC,MAAAA,MAAM,EAAE;AANuC,KAAjC,EAOZC,MAPY,CAOLV,IAPK,CAAf;AAQA,WAAOC,QAAP;AACA;;AACDU,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AA3BiC;;AA8BnC,MAAMC,IAAI,GAAIjB,KAAD,IAAW;AACvB,SAAO;AACNC,IAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBA;AADvB,GAAP;AAGA,CAJD;;AAMA,MAAMiB,IAAI,GAAIC,QAAD,IAAc;AAC1B,SAAO;AACNvB,IAAAA,aAAa,EAAGwB,IAAD,IAAUD,QAAQ,CAACvB,aAAa,CAACwB,IAAD,CAAd;AAD3B,GAAP;AAGA,CAJD;;AAMA,eAAezB,OAAO,CAACsB,IAAD,EAAOC,IAAP,CAAP,CAAoBrB,UAApB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSatellites } from \"../redux/actions/SatellitesActions\";\n\nclass SatDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsatellites: [],\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getSatellites();\n\t\t}\n\t}\n\n\tconvertTime(time) {\n\t\tlet convTime = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(time);\n\t\treturn convTime;\n\t}\n\trender() {\n\t\treturn <div className=\"grid-zone grid-zone--main\"></div>;\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\tsatellites: state.satellites.satellites,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetSatellites: (info) => dispatch(getSatellites(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(SatDisplay);\n"]},"metadata":{},"sourceType":"module"}