{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Main.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar.js\";\nimport AlertDisplay from \"../components/AlertDisplay.js\";\nimport SatDisplay from \"../components/SatDisplay.js\";\nimport { connect } from \"react-redux\";\nimport { loggedIn } from \"../redux/actions/UsersActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false\n    };\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.checkLoggedIn();\n    }\n  }\n\n  render() {\n    if (!this.props.loggedIn) {\n      console.log(this.props);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(AlertDisplay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SatDisplay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    loggedIn: state.users.loggedIn\n  };\n};\n\nexport default connect(mSTP, {\n  checkLoggedIn\n})(Main);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Main.js"],"names":["React","Component","Redirect","Link","NavBar","AlertDisplay","SatDisplay","connect","loggedIn","Main","constructor","props","state","componentDidMount","prevProps","checkLoggedIn","render","console","log","mSTP","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,+BAAzB;;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAC5BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZJ,MAAAA,QAAQ,EAAE;AADE,KAAb;AAGA;;AAEDK,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKH,KAAL,KAAeG,SAAnB,EAA8B;AAC7B,WAAKH,KAAL,CAAWI,aAAX;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWH,QAAhB,EAA0B;AACzBS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAHD,MAGO;AACN,0BACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAOA;AACD;;AA3B2B;;AA8B7B,MAAMQ,IAAI,GAAIP,KAAD,IAAW;AACvB,SAAO;AACNJ,IAAAA,QAAQ,EAAEI,KAAK,CAACQ,KAAN,CAAYZ;AADhB,GAAP;AAGA,CAJD;;AAKA,eAAeD,OAAO,CAACY,IAAD,EAAO;AAAEJ,EAAAA;AAAF,CAAP,CAAP,CAAiCN,IAAjC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar.js\";\nimport AlertDisplay from \"../components/AlertDisplay.js\";\nimport SatDisplay from \"../components/SatDisplay.js\";\nimport { connect } from \"react-redux\";\nimport { loggedIn } from \"../redux/actions/UsersActions\";\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloggedIn: false,\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.checkLoggedIn();\n\t\t}\n\t}\n\n\trender() {\n\t\tif (!this.props.loggedIn) {\n\t\t\tconsole.log(this.props);\n\t\t\treturn <Redirect to=\"/login\" />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<AlertDisplay />\n\t\t\t\t\t<SatDisplay />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\tloggedIn: state.users.loggedIn,\n\t};\n};\nexport default connect(mSTP, { checkLoggedIn })(Main);\n"]},"metadata":{},"sourceType":"module"}