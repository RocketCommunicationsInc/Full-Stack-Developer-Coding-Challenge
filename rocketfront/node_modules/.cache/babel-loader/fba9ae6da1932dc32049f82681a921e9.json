{"ast":null,"code":"import { __assign, __read, __spread } from \"tslib\";\n/* eslint-disable max-lines */\n\nimport { SessionStatus } from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\n\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\n\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\n\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\n\nvar Hub =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  function Hub(client, scope, _version) {\n    if (scope === void 0) {\n      scope = new Scope();\n    }\n\n    if (_version === void 0) {\n      _version = API_VERSION;\n    }\n\n    this._version = _version;\n    /** Is a {@link Layer}[] containing the client and scope */\n\n    this._stack = [{}];\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.isOlderThan = function (version) {\n    return this._version < version;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.bindClient = function (client) {\n    var top = this.getStackTop();\n    top.client = client;\n\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.pushScope = function () {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope: scope\n    });\n    return scope;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.popScope = function () {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.withScope = function (callback) {\n    var scope = this.pushScope();\n\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getClient = function () {\n    return this.getStackTop().client;\n  };\n  /** Returns the scope of the top stack. */\n\n\n  Hub.prototype.getScope = function () {\n    return this.getStackTop().scope;\n  };\n  /** Returns the scope stack for domains or the process. */\n\n\n  Hub.prototype.getStack = function () {\n    return this._stack;\n  };\n  /** Returns the topmost scope layer in the order domain > local > process. */\n\n\n  Hub.prototype.getStackTop = function () {\n    return this._stack[this._stack.length - 1];\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n\n  Hub.prototype.captureException = function (exception, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: exception,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureMessage = function (message, level, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: message,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureEvent = function (event, hint) {\n    var eventId = this._lastEventId = uuid4();\n\n    this._invokeClient('captureEvent', event, __assign(__assign({}, hint), {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.lastEventId = function () {\n    return this._lastEventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n    var _a = this.getStackTop(),\n        scope = _a.scope,\n        client = _a.client;\n\n    if (!scope || !client) return; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n    var _b = client.getOptions && client.getOptions() || {},\n        _c = _b.beforeBreadcrumb,\n        beforeBreadcrumb = _c === void 0 ? null : _c,\n        _d = _b.maxBreadcrumbs,\n        maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n\n    if (maxBreadcrumbs <= 0) return;\n    var timestamp = dateTimestampInSeconds();\n\n    var mergedBreadcrumb = __assign({\n      timestamp: timestamp\n    }, breadcrumb);\n\n    var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n      return beforeBreadcrumb(mergedBreadcrumb, hint);\n    }) : mergedBreadcrumb;\n    if (finalBreadcrumb === null) return;\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setUser = function (user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTags = function (tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtras = function (extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTag = function (key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtra = function (key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Hub.prototype.setContext = function (name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.configureScope = function (callback) {\n    var _a = this.getStackTop(),\n        scope = _a.scope,\n        client = _a.client;\n\n    if (scope && client) {\n      callback(scope);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.run = function (callback) {\n    var oldHub = makeMain(this);\n\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getIntegration = function (integration) {\n    var client = this.getClient();\n    if (!client) return null;\n\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.startSpan = function (context) {\n    return this._callExtensionMethod('startSpan', context);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.startTransaction = function (context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.traceHeaders = function () {\n    return this._callExtensionMethod('traceHeaders');\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureSession = function (endSession) {\n    if (endSession === void 0) {\n      endSession = false;\n    } // both send the update and pull the session from the scope\n\n\n    if (endSession) {\n      return this.endSession();\n    } // only send the update\n\n\n    this._sendSessionUpdate();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.endSession = function () {\n    var _a, _b, _c, _d, _e;\n\n    (_c = (_b = (_a = this.getStackTop()) === null || _a === void 0 ? void 0 : _a.scope) === null || _b === void 0 ? void 0 : _b.getSession()) === null || _c === void 0 ? void 0 : _c.close();\n\n    this._sendSessionUpdate(); // the session is over; take it off of the scope\n\n\n    (_e = (_d = this.getStackTop()) === null || _d === void 0 ? void 0 : _d.scope) === null || _e === void 0 ? void 0 : _e.setSession();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.startSession = function (context) {\n    var _a = this.getStackTop(),\n        scope = _a.scope,\n        client = _a.client;\n\n    var _b = client && client.getOptions() || {},\n        release = _b.release,\n        environment = _b.environment;\n\n    var session = new Session(__assign(__assign({\n      release: release,\n      environment: environment\n    }, scope && {\n      user: scope.getUser()\n    }), context));\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({\n          status: SessionStatus.Exited\n        });\n      }\n\n      this.endSession(); // Afterwards we set the new session on the scope\n\n      scope.setSession(session);\n    }\n\n    return session;\n  };\n  /**\n   * Sends the current Session on the scope\n   */\n\n\n  Hub.prototype._sendSessionUpdate = function () {\n    var _a = this.getStackTop(),\n        scope = _a.scope,\n        client = _a.client;\n\n    if (!scope) return;\n    var session = scope.getSession && scope.getSession();\n\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  };\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Hub.prototype._invokeClient = function (method) {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var _b = this.getStackTop(),\n        scope = _b.scope,\n        client = _b.client;\n\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (_a = client)[method].apply(_a, __spread(args, [scope]));\n    }\n  };\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Hub.prototype._callExtensionMethod = function (method) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n\n    logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n  };\n\n  return Hub;\n}();\n\nexport { Hub };\n/** Returns the global shim registry. */\n\nexport function getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined\n  };\n  return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\n\nexport function makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\n\nexport function getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier(); // If there's no hub, or its an old API, assign a new one\n\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  } // Prefer domains over global if they are there (applicable only to Node environment)\n\n\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  } // Return hub that lives on a global object\n\n\n  return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\n\nexport function getActiveDomain() {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  var sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\n\nfunction getHubFromActiveDomain(registry) {\n  var _a, _b, _c;\n\n  try {\n    var activeDomain = (_c = (_b = (_a = getMainCarrier().__SENTRY__) === null || _a === void 0 ? void 0 : _a.extensions) === null || _b === void 0 ? void 0 : _b.domain) === null || _c === void 0 ? void 0 : _c.active; // If there's no active domain, just return global hub\n\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    } // If there's no hub on current domain, or it's an old API, assign a new one\n\n\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    } // Return hub that lives on a domain\n\n\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\n\n\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n\n\nexport function getHubFromCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n\nexport function setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}","map":{"version":3,"sources":["../src/hub.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  SessionStatus,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    this.getStackTop()\n      ?.scope?.getSession()\n      ?.close();\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    this.getStackTop()?.scope?.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({ status: SessionStatus.Exited });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getMainCarrier().__SENTRY__?.extensions?.domain?.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}