{"ast":null,"code":"export default class {\n  static get properties() {\n    return {\n      oneDay: 86400000\n    };\n  }\n\n  static dayOfYear(timezone = 'utc') {\n    const now = timezone === 'utc' ? this.utcDate() : new Date();\n    const year = timezone === 'utc' ? new Date(now.getFullYear(), 0, 1) : new Date(now.getUTCFullYear(), 0, 1);\n    const day = Math.ceil((now - year) / this.properties.oneDay);\n    return day.toString().padStart(3, '000');\n  }\n\n  static utcDate(date = new Date()) {\n    return new Date(date.getFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n  }\n\n  static formatClockTimeUTC(time = new Date(), timezone = 'UTC', hideTimezone = false) {\n    if (hideTimezone) {\n      return new Date(time).toLocaleTimeString('us-EN', {\n        hour12: false,\n        timeZone: timezone\n      });\n    }\n\n    return new Date(time).toLocaleTimeString('us-EN', {\n      hour12: false,\n      timeZone: timezone,\n      timeZoneName: 'short'\n    });\n  }\n\n  static formatMachineTimeUTC(time = new Date()) {\n    return `${time.getUTCFullYear()}-${time.getUTCMonth()}-${time.getUTCDate()} \n            ${time.getUTCHours()}:${time.getUTCMinutes()}:${time.getUTCSeconds()}:${time.getUTCMilliseconds()}`;\n  }\n\n}","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/node_modules/@astrouxds/rux-utils/datetime.js"],"names":["properties","oneDay","dayOfYear","timezone","now","utcDate","Date","year","getFullYear","getUTCFullYear","day","Math","ceil","toString","padStart","date","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","formatClockTimeUTC","time","hideTimezone","toLocaleTimeString","hour12","timeZone","timeZoneName","formatMachineTimeUTC","getUTCMilliseconds"],"mappings":"AAAA,eAAe,MAAM;AACE,aAAVA,UAAU,GAAG;AACtB,WAAO;AACLC,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;;AAEe,SAATC,SAAS,CAACC,QAAQ,GAAG,KAAZ,EAAmB;AACjC,UAAMC,GAAG,GAAGD,QAAQ,KAAK,KAAb,GAAqB,KAAKE,OAAL,EAArB,GAAsC,IAAIC,IAAJ,EAAlD;AACA,UAAMC,IAAI,GAAGJ,QAAQ,KAAK,KAAb,GAAqB,IAAIG,IAAJ,CAASF,GAAG,CAACI,WAAJ,EAAT,EAA4B,CAA5B,EAA+B,CAA/B,CAArB,GAAyD,IAAIF,IAAJ,CAASF,GAAG,CAACK,cAAJ,EAAT,EAA+B,CAA/B,EAAkC,CAAlC,CAAtE;AAEA,UAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACR,GAAG,GAAGG,IAAP,IAAe,KAAKP,UAAL,CAAgBC,MAAzC,CAAZ;AAEA,WAAOS,GAAG,CAACG,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,KAA3B,CAAP;AACD;;AAEa,SAAPT,OAAO,CAACU,IAAI,GAAG,IAAIT,IAAJ,EAAR,EAAoB;AAChC,WAAO,IAAIA,IAAJ,CACHS,IAAI,CAACP,WAAL,EADG,EAEHO,IAAI,CAACC,WAAL,EAFG,EAGHD,IAAI,CAACE,UAAL,EAHG,EAIHF,IAAI,CAACG,WAAL,EAJG,EAKHH,IAAI,CAACI,aAAL,EALG,EAMHJ,IAAI,CAACK,aAAL,EANG,CAAP;AAQD;;AAEwB,SAAlBC,kBAAkB,CAACC,IAAI,GAAG,IAAIhB,IAAJ,EAAR,EAAoBH,QAAQ,GAAG,KAA/B,EAAsCoB,YAAY,GAAG,KAArD,EAA4D;AACnF,QAAIA,YAAJ,EAAkB;AAChB,aAAO,IAAIjB,IAAJ,CAASgB,IAAT,EAAeE,kBAAf,CAAkC,OAAlC,EAA2C;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,QAAQ,EAAEvB;AAA3B,OAA3C,CAAP;AACD;;AACD,WAAO,IAAIG,IAAJ,CAASgB,IAAT,EAAeE,kBAAf,CAAkC,OAAlC,EAA2C;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,QAAQ,EAAEvB,QAA3B;AAAqCwB,MAAAA,YAAY,EAAE;AAAnD,KAA3C,CAAP;AACD;;AAE0B,SAApBC,oBAAoB,CAACN,IAAI,GAAG,IAAIhB,IAAJ,EAAR,EAAoB;AAC7C,WAAQ,GAAEgB,IAAI,CAACb,cAAL,EAAsB,IAAGa,IAAI,CAACN,WAAL,EAAmB,IAAGM,IAAI,CAACL,UAAL,EAAkB;AAC/E,cAAcK,IAAI,CAACJ,WAAL,EAAmB,IAAGI,IAAI,CAACH,aAAL,EAAqB,IAAGG,IAAI,CAACF,aAAL,EAAqB,IAAGE,IAAI,CAACO,kBAAL,EAA0B,EAD1G;AAED;;AArCkB","sourcesContent":["export default class {\n  static get properties() {\n    return {\n      oneDay: 86400000,\n    };\n  }\n\n  static dayOfYear(timezone = 'utc') {\n    const now = timezone === 'utc' ? this.utcDate() : new Date();\n    const year = timezone === 'utc' ? new Date(now.getFullYear(), 0, 1) : new Date(now.getUTCFullYear(), 0, 1);\n\n    const day = Math.ceil((now - year) / this.properties.oneDay);\n\n    return day.toString().padStart(3, '000');\n  }\n\n  static utcDate(date = new Date()) {\n    return new Date(\n        date.getFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds()\n    );\n  }\n\n  static formatClockTimeUTC(time = new Date(), timezone = 'UTC', hideTimezone = false) {\n    if (hideTimezone) {\n      return new Date(time).toLocaleTimeString('us-EN', { hour12: false, timeZone: timezone });\n    }\n    return new Date(time).toLocaleTimeString('us-EN', { hour12: false, timeZone: timezone, timeZoneName: 'short' });\n  }\n\n  static formatMachineTimeUTC(time = new Date()) {\n    return `${time.getUTCFullYear()}-${time.getUTCMonth()}-${time.getUTCDate()} \n            ${time.getUTCHours()}:${time.getUTCMinutes()}:${time.getUTCSeconds()}:${time.getUTCMilliseconds()}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}