{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js\";\nimport { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS } from \"../actionTypes\";\nimport axios from \"axios\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const signup = userData => {\n  return dispatch => {\n    fetch(\"http://localhost:3001/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        user: userData\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error && data.error !== \"\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"rux-modal\", {\n            title: \"error\",\n            message: data.error,\n            confirmText: \"Ok\",\n            denyText: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this);\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const login = userData => {\n  console.log(userData);\n  return dispatch => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(userData)\n    }).then(resp => resp.json()).then(data => {\n      if (data.error && data.error !== \"\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"rux-modal\", {\n            title: \"error\",\n            message: data.error,\n            confirmText: \"Ok\",\n            denyText: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this);\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const checkLoggedIn = () => {\n  return dispatch => {\n    fetch(`http://localhost:3001/logged_in`, {\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => {\n      if (data.error && data.error !== \"\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"rux-modal\", {\n            title: \"error\",\n            message: data.error,\n            confirmText: \"Ok\",\n            denyText: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this);\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: data.logged_in,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT,\n      payload: {\n        loggedIn: false,\n        currentUser: {}\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js"],"names":["LOGOUT","AUTH_SUCCESS","axios","RuxModal","signup","userData","dispatch","fetch","method","headers","credentials","body","JSON","stringify","user","then","res","json","data","error","type","payload","loggedIn","currentUser","login","console","log","resp","checkLoggedIn","logged_in","logout"],"mappings":"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","sourcesContent":["import { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS } from \"../actionTypes\";\nimport axios from \"axios\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\n\nexport const signup = (userData) => {\n\treturn (dispatch) => {\n\t\tfetch(\"http://localhost:3001/users\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify({ user: userData }),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<rux-modal\n\t\t\t\t\t\t\t\ttitle=\"error\"\n\t\t\t\t\t\t\t\tmessage={data.error}\n\t\t\t\t\t\t\t\tconfirmText=\"Ok\"\n\t\t\t\t\t\t\t\tdenyText=\"Cancel\"\n\t\t\t\t\t\t\t></rux-modal>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const login = (userData) => {\n\tconsole.log(userData);\n\treturn (dispatch) => {\n\t\tfetch(\"http://localhost:3001/user\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify(userData),\n\t\t})\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<rux-modal\n\t\t\t\t\t\t\t\ttitle=\"error\"\n\t\t\t\t\t\t\t\tmessage={data.error}\n\t\t\t\t\t\t\t\tconfirmText=\"Ok\"\n\t\t\t\t\t\t\t\tdenyText=\"Cancel\"\n\t\t\t\t\t\t\t></rux-modal>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const checkLoggedIn = () => {\n\treturn (dispatch) => {\n\t\tfetch(`http://localhost:3001/logged_in`, {\n\t\t\tcredentials: \"include\",\n\t\t})\n\t\t\t.then((res) => res.json())\n\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<rux-modal\n\t\t\t\t\t\t\t\ttitle=\"error\"\n\t\t\t\t\t\t\t\tmessage={data.error}\n\t\t\t\t\t\t\t\tconfirmText=\"Ok\"\n\t\t\t\t\t\t\t\tdenyText=\"Cancel\"\n\t\t\t\t\t\t\t></rux-modal>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: data.logged_in,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const logout = () => {\n\treturn (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: LOGOUT,\n\t\t\tpayload: {\n\t\t\t\tloggedIn: false,\n\t\t\t\tcurrentUser: {},\n\t\t\t},\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}