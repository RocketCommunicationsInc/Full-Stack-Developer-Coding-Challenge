{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSatellites } from \"../redux/actions/SatellitesActions\";\nimport { RuxStatus } from \"@astrouxds/rux-status/rux-status.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SatDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        search: e.target.value\n      });\n      this.filterSats();\n    };\n\n    this.countStates = st => {\n      let sum = this.props.satellites.filter(s => s.contactState === st);\n      return sum.length;\n    };\n\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.getSatellites();\n    }\n  }\n\n  filterContacts() {\n    if (this.state.search === \"\" || !this.state.search) {\n      return this.props.satellites;\n    }\n\n    return this.props.satellites.filter(s => {\n      return s.contactName.toString().includes(this.state.search);\n    });\n  }\n\n  filterSats() {\n    if (this.state.search === \"\" || !this.state.search) {\n      return this.props.satellites;\n    }\n\n    return this.props.satellites.filter(s => {\n      return s.contactState.includes(this.state.search);\n    });\n  }\n\n  convertTime(time) {\n    let convTime = new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    }).format(time);\n    return convTime;\n  }\n\n  findDistinctStates() {\n    let distinct = [...new Set(this.props.satellites.map(s => s.contactState))];\n    return distinct;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-zone grid-zone--main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-zone-main__subheader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"contact-title\",\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.props.satellites.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this), \" Total Contacts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), this.findDistinctStates().map(ds => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-summary\",\n              id: ds,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: this.countStates(ds)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 10\n              }, this), ds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 9\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rux-form-field-div-search\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rux-form-field search\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"rux-form-field__text-input search\",\n                placeholder: \"Search by name\",\n                type: \"search\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"alert-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"classy\",\n              for: \"stateFilter\",\n              children: \"State Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              class: \"rux-select\",\n              id: \"state-filter\",\n              onChange: this.handleSearch,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 9\n              }, this), this.findDistinctStates().map(st => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: st,\n                  children: st\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 17\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rux-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rux-table__column-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Begin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), this.filterContacts().map(sat => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: sat.contactName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"rux-status\", {\n                status: sat.contactStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.convertTime(sat.contactBeginTimestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.convertTime(sat.contactEndTimestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 8\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    satellites: state.satellites.satellites\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    getSatellites: info => dispatch(getSatellites(info))\n  };\n};\n\nexport default connect(mSTP, mDTP)(SatDisplay);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js"],"names":["React","Component","connect","getSatellites","RuxStatus","SatDisplay","constructor","props","handleChange","e","setState","search","target","value","handleSearch","filterSats","countStates","st","sum","satellites","filter","s","contactState","length","state","componentDidMount","prevProps","filterContacts","contactName","toString","includes","convertTime","time","convTime","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","findDistinctStates","distinct","Set","map","render","ds","sat","contactStatus","contactBeginTimestamp","contactEndTimestamp","mSTP","mDTP","dispatch","info"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSatellites } from \"../redux/actions/SatellitesActions\";\nimport { RuxStatus } from \"@astrouxds/rux-status/rux-status.js\";\n\nclass SatDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearch: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getSatellites();\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t};\n\n\thandleSearch = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t\tthis.filterSats();\n\t};\n\n\tfilterContacts() {\n\t\tif (this.state.search === \"\" || !this.state.search) {\n\t\t\treturn this.props.satellites;\n\t\t}\n\n\t\treturn this.props.satellites.filter((s) => {\n\t\t\treturn s.contactName.toString().includes(this.state.search);\n\t\t});\n\t}\n\n\tfilterSats() {\n\t\tif (this.state.search === \"\" || !this.state.search) {\n\t\t\treturn this.props.satellites;\n\t\t}\n\n\t\treturn this.props.satellites.filter((s) => {\n\t\t\treturn s.contactState.includes(this.state.search);\n\t\t});\n\t}\n\n\tconvertTime(time) {\n\t\tlet convTime = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(time);\n\t\treturn convTime;\n\t}\n\n\tfindDistinctStates() {\n\t\tlet distinct = [\n\t\t\t...new Set(this.props.satellites.map((s) => s.contactState)),\n\t\t];\n\t\treturn distinct;\n\t}\n\tcountStates = (st) => {\n\t\tlet sum = this.props.satellites.filter((s) => s.contactState === st);\n\t\treturn sum.length;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"grid-zone grid-zone--main\">\n\t\t\t\t<div className=\"grid-zone-main__subheader\">\n\t\t\t\t\t<h2 className=\"contact-title\">Contacts</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"contact-summary\">\n\t\t\t\t\t\t\t<h1>{this.props.satellites.length}</h1> Total Contacts\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{this.findDistinctStates().map((ds) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"contact-summary\" id={ds}>\n\t\t\t\t\t\t\t\t\t<h1>{this.countStates(ds)}</h1>\n\t\t\t\t\t\t\t\t\t{ds}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t{/* <div className=\"contact-summary\">\n\t\t\t\t\t\t\t<h1>{this.findDistinctStates()}</h1> Contact States\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"rux-form-field-div-search\">\n\t\t\t\t\t\t\t<div className=\"rux-form-field search\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"rux-form-field__text-input search\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search by name\"\n\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"alert-filter\">\n\t\t\t\t\t\t\t<label class=\"classy\" for=\"stateFilter\">\n\t\t\t\t\t\t\t\tState Filter\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass=\"rux-select\"\n\t\t\t\t\t\t\t\tid=\"state-filter\"\n\t\t\t\t\t\t\t\tonChange={this.handleSearch}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\">All</option>\n\t\t\t\t\t\t\t\t{this.findDistinctStates().map((st) => {\n\t\t\t\t\t\t\t\t\treturn <option value={st}>{st}</option>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<table className=\"rux-table\">\n\t\t\t\t\t<tr className=\"rux-table__column-head\">\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Begin</th>\n\t\t\t\t\t\t<th>End</th>\n\t\t\t\t\t</tr>\n\n\t\t\t\t\t{this.filterContacts().map((sat) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{sat.contactName}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<rux-status status={sat.contactStatus}></rux-status>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{this.convertTime(sat.contactBeginTimestamp)}</td>\n\t\t\t\t\t\t\t\t<td>{this.convertTime(sat.contactEndTimestamp)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\tsatellites: state.satellites.satellites,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetSatellites: (info) => dispatch(getSatellites(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(SatDisplay);\n"]},"metadata":{},"sourceType":"module"}