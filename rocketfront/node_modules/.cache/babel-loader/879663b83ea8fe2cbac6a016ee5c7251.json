{"ast":null,"code":"var _jsxFileName = \"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/AlertsActions\";\nimport { RuxLog } from \"@astrouxds/rux-log/rux-log.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AlertDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alerts: []\n    };\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.getAlerts();\n    } // this.updateAlerts();\n\n  } // updateAlerts() {\n  // \tthis.setState({\n  // \t\talerts: [\n  // \t\t],\n  // \t});\n  // }\n\n\n  render() {\n    // return <div id=\"alerts\">{this.renderAlerts()}</div>;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rux-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rux-table__column-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), this.props.alerts.map(alert => {\n          let options = {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\"\n          }; // const time = new Date(alert.time);\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: alert.errorCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"rux-status\", {\n                status: alert.errorSeverity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: alert.errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Date(alert.time).toLocaleString(\"en-US\", options)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 8\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    alerts: state.alerts.alerts\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    getAlerts: info => dispatch(getAlerts(info))\n  };\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js"],"names":["React","Component","Redirect","Link","connect","getAlerts","RuxLog","AlertDisplay","constructor","props","state","alerts","componentDidMount","prevProps","render","map","alert","options","hour","minute","second","errorCategory","errorSeverity","errorMessage","Date","time","toLocaleString","mSTP","mDTP","dispatch","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AAEA,SAASC,MAAT,QAAuB,+BAAvB;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKJ,KAAL,KAAeI,SAAnB,EAA8B;AAC7B,WAAKJ,KAAL,CAAWJ,SAAX;AACA,KAH2B,CAI5B;;AACA,GAbmC,CAepC;AACA;AACA;AAEA;AACA;AACA;;;AAEAS,EAAAA,MAAM,GAAG;AACR;AACA,wBACC;AAAA,6BACC;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,gCACC;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAOE,KAAKL,KAAL,CAAWE,MAAX,CAAkBI,GAAlB,CAAuBC,KAAD,IAAW;AACjC,cAAIC,OAAO,GAAG;AACbC,YAAAA,IAAI,EAAE,SADO;AAEbC,YAAAA,MAAM,EAAE,SAFK;AAGbC,YAAAA,MAAM,EAAE;AAHK,WAAd,CADiC,CAMjC;;AACA,8BACC;AAAA,oCACC;AAAA,wBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAA,qCACC;AAAY,gBAAA,MAAM,EAAEL,KAAK,CAACM;AAA1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAFD,eAKC;AAAA,wBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,oBALD,eAMC;AAAA,wBAAKC,IAAI,CAACR,KAAK,CAACS,IAAP,CAAJ,CAAiBC,cAAjB,CAAgC,OAAhC,EAAyCT,OAAzC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAND;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AAUA,SAjBA,CAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AA8BA;;AAvDmC;;AA0DrC,MAAMU,IAAI,GAAIjB,KAAD,IAAW;AACvB,SAAO;AACNC,IAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaA;AADf,GAAP;AAGA,CAJD;;AAMA,MAAMiB,IAAI,GAAIC,QAAD,IAAc;AAC1B,SAAO;AACNxB,IAAAA,SAAS,EAAGyB,IAAD,IAAUD,QAAQ,CAACxB,SAAS,CAACyB,IAAD,CAAV;AADvB,GAAP;AAGA,CAJD;;AAMA,eAAe1B,OAAO,CAACuB,IAAD,EAAOC,IAAP,CAAP,CAAoBrB,YAApB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/AlertsActions\";\n\nimport { RuxLog } from \"@astrouxds/rux-log/rux-log.js\";\n\nclass AlertDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\talerts: [],\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getAlerts();\n\t\t}\n\t\t// this.updateAlerts();\n\t}\n\n\t// updateAlerts() {\n\t// \tthis.setState({\n\t// \t\talerts: [\n\n\t// \t\t],\n\t// \t});\n\t// }\n\n\trender() {\n\t\t// return <div id=\"alerts\">{this.renderAlerts()}</div>;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<table className=\"rux-table\">\n\t\t\t\t\t<tr className=\"rux-table__column-head\">\n\t\t\t\t\t\t<th>Category</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Message</th>\n\t\t\t\t\t\t<th>Time</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{this.props.alerts.map((alert) => {\n\t\t\t\t\t\tlet options = {\n\t\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t\t\tminute: \"numeric\",\n\t\t\t\t\t\t\tsecond: \"numeric\",\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// const time = new Date(alert.time);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{alert.errorCategory}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<rux-status status={alert.errorSeverity}></rux-status>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{alert.errorMessage}</td>\n\t\t\t\t\t\t\t\t<td>{Date(alert.time).toLocaleString(\"en-US\", options)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\talerts: state.alerts.alerts,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetAlerts: (info) => dispatch(getAlerts(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);\n"]},"metadata":{},"sourceType":"module"}