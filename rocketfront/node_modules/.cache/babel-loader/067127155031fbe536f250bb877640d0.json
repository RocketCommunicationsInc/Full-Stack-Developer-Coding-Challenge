{"ast":null,"code":"import { LitElement, html } from 'lit-element';\nexport class RuxGlobalStatusBar extends LitElement {\n  static get properties() {\n    return {\n      appname: String,\n      version: String,\n      theme: {\n        type: String\n      }\n    };\n  }\n\n  render() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          position: sticky;\n\n          top: 0;\n          left: 0;\n\n          height: 110px;\n          width: 100%;\n\n          padding: 0 1.875rem;\n\n          box-sizing: border-box;\n          background-color: var(--globalAppHeader);\n\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n\n          contain: content; /* This improves CSS performance see: https://developers.google.com/web/updates/2016/06/css-containment */\n        }\n\n        header {\n          display: flex;\n\n          height: 100%;\n          width: 100%;\n\n          /* padding: 0 2.5rem; */\n\n          align-items: center;\n          justify-content: space-between;\n\n          box-sizing: border-box;\n        }\n\n        /* \n            The hidden attribute on an element gets ignored when\n            a display property is added to the element to be hidden.\n            Explicitly setting the display property is a work around\n            as would be a wrapper div\n          */\n        .app-meta[hidden] {\n          display: none !important;\n        }\n\n        .app-meta {\n          display: block;\n          padding: 0;\n          margin: 0;\n          color: var(--inputBackground);\n        }\n\n        .app-meta h1 {\n          font-size: 2rem;\n          font-weight: 300;\n        }\n\n        .app-version {\n          font-size: 1.1875rem;\n          font-weight: 300;\n          /* color: rgba(255, 255, 255, 0.298039); */\n\n          margin-left: 0.5em;\n        }\n      </style>\n\n      <header>\n        <div class=\"app-meta\" ?hidden=\"${!this.appname}\">\n          <h1>${this.appname}<span class=\"app-version\">${this.version}</span></h1>\n        </div>\n\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    super.connectedCallback(); // if the user hasn’t defined an appname then explicitly\n    // set the appname property to false to hide the app-meta\n    // section from being included in the flex DOM\n\n    if (!this.appname) this.appname = false;\n  }\n\n  ready() {\n    super.ready();\n  }\n\n}\ncustomElements.define('rux-global-status-bar', RuxGlobalStatusBar);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/rocketman/node_modules/@astrouxds/rux-global-status-bar/rux-global-status-bar.js"],"names":["LitElement","html","RuxGlobalStatusBar","properties","appname","String","version","theme","type","render","constructor","connectedCallback","ready","customElements","define"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,aAAjC;AAEA,OAAO,MAAMC,kBAAN,SAAiCF,UAAjC,CAA4C;AAC5B,aAAVG,UAAU,GAAG;AACtB,WAAO;AACLC,MAAAA,OAAO,EAAEC,MADJ;AAELC,MAAAA,OAAO,EAAED,MAFJ;AAGLE,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEH;AADD;AAHF,KAAP;AAOD;;AACDI,EAAAA,MAAM,GAAG;AACP,WAAOR,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,CAAC,KAAKG,OAAQ;AACvD,gBAAgB,KAAKA,OAAQ,6BAA4B,KAAKE,OAAQ;AACtE;AACA;AACA;AACA;AACA,KA7EI;AA8ED;;AACDI,EAAAA,WAAW,GAAG;AACZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMA,iBAAN,GADkB,CAElB;AACA;AACA;;AACA,QAAI,CAAC,KAAKP,OAAV,EAAmB,KAAKA,OAAL,GAAe,KAAf;AACpB;;AACDQ,EAAAA,KAAK,GAAG;AACN,UAAMA,KAAN;AACD;;AAtGgD;AAwGnDC,cAAc,CAACC,MAAf,CAAsB,uBAAtB,EAA+CZ,kBAA/C","sourcesContent":["import { LitElement, html } from 'lit-element';\n\nexport class RuxGlobalStatusBar extends LitElement {\n  static get properties() {\n    return {\n      appname: String,\n      version: String,\n      theme: {\n        type: String,\n      },\n    };\n  }\n  render() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          position: sticky;\n\n          top: 0;\n          left: 0;\n\n          height: 110px;\n          width: 100%;\n\n          padding: 0 1.875rem;\n\n          box-sizing: border-box;\n          background-color: var(--globalAppHeader);\n\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n\n          contain: content; /* This improves CSS performance see: https://developers.google.com/web/updates/2016/06/css-containment */\n        }\n\n        header {\n          display: flex;\n\n          height: 100%;\n          width: 100%;\n\n          /* padding: 0 2.5rem; */\n\n          align-items: center;\n          justify-content: space-between;\n\n          box-sizing: border-box;\n        }\n\n        /* \n            The hidden attribute on an element gets ignored when\n            a display property is added to the element to be hidden.\n            Explicitly setting the display property is a work around\n            as would be a wrapper div\n          */\n        .app-meta[hidden] {\n          display: none !important;\n        }\n\n        .app-meta {\n          display: block;\n          padding: 0;\n          margin: 0;\n          color: var(--inputBackground);\n        }\n\n        .app-meta h1 {\n          font-size: 2rem;\n          font-weight: 300;\n        }\n\n        .app-version {\n          font-size: 1.1875rem;\n          font-weight: 300;\n          /* color: rgba(255, 255, 255, 0.298039); */\n\n          margin-left: 0.5em;\n        }\n      </style>\n\n      <header>\n        <div class=\"app-meta\" ?hidden=\"${!this.appname}\">\n          <h1>${this.appname}<span class=\"app-version\">${this.version}</span></h1>\n        </div>\n\n        <slot></slot>\n      </header>\n    `;\n  }\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    // if the user hasn’t defined an appname then explicitly\n    // set the appname property to false to hide the app-meta\n    // section from being included in the flex DOM\n    if (!this.appname) this.appname = false;\n  }\n  ready() {\n    super.ready();\n  }\n}\ncustomElements.define('rux-global-status-bar', RuxGlobalStatusBar);\n"]},"metadata":{},"sourceType":"module"}