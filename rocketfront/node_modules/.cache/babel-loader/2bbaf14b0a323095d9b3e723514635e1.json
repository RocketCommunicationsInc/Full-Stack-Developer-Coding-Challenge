{"ast":null,"code":"import { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\nimport * as Cookies from \"js-cookie\";\nconst URL = process.env.NODE_ENV === \"production\" ? \"https://randirocket.herokuapp.com/\" : \"http://localhost:3001/\";\nexport const signup = userData => {\n  return dispatch => {\n    fetch(URL + \"users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        user: userData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.errors && data.errors !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: false,\n            errors: [data.errors]\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const login = userData => {\n  return dispatch => {\n    fetch(URL + \"user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(userData)\n    }).then(resp => resp.json()).then(data => {\n      if (data.errors && data.errors !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: false,\n            errors: data.errors\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const checkLoggedIn = () => {\n  return dispatch => {\n    fetch(URL + \"logged_in\", {\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => {\n      if (data.error && data.error !== \"\") {\n        dispatch({\n          type: AUTH_FAILURE,\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: {\n            loggedIn: data.logged_in,\n            currentUser: data.user\n          }\n        });\n      }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT,\n      payload: {\n        loggedIn: false,\n        currentUser: {}\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js"],"names":["LOGOUT","AUTH_SUCCESS","AUTH_FAILURE","RuxModal","Cookies","URL","process","env","NODE_ENV","signup","userData","dispatch","fetch","method","headers","credentials","body","JSON","stringify","user","then","res","json","data","console","log","errors","type","payload","loggedIn","currentUser","login","resp","checkLoggedIn","error","logged_in","logout"],"mappings":"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","sourcesContent":["import { LOGOUT } from \"../actionTypes\";\nimport { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { RuxModal } from \"@astrouxds/rux-modal/rux-modal.js\";\nimport * as Cookies from \"js-cookie\";\n\nconst URL =\n\tprocess.env.NODE_ENV === \"production\"\n\t\t? \"https://randirocket.herokuapp.com/\"\n\t\t: \"http://localhost:3001/\";\n\nexport const signup = (userData) => {\n\treturn (dispatch) => {\n\t\tfetch(URL + \"users\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify({ user: userData }),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.errors && data.errors !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: false,\n\t\t\t\t\t\t\terrors: [data.errors],\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const login = (userData) => {\n\treturn (dispatch) => {\n\t\tfetch(URL + \"user\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tcredentials: \"include\",\n\t\t\tbody: JSON.stringify(userData),\n\t\t})\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.errors && data.errors !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: false,\n\t\t\t\t\t\t\terrors: data.errors,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const checkLoggedIn = () => {\n\treturn (dispatch) => {\n\t\tfetch(URL + \"logged_in\", {\n\t\t\tcredentials: \"include\",\n\t\t})\n\t\t\t.then((res) => res.json())\n\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error && data.error !== \"\") {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_FAILURE,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: true,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AUTH_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tloggedIn: data.logged_in,\n\t\t\t\t\t\t\tcurrentUser: data.user,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport const logout = () => {\n\treturn (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: LOGOUT,\n\t\t\tpayload: {\n\t\t\t\tloggedIn: false,\n\t\t\t\tcurrentUser: {},\n\t\t\t},\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}