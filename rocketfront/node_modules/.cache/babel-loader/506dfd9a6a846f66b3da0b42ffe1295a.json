{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils'; // \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\n\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\n\nvar InboundFilters =\n/** @class */\nfunction () {\n  function InboundFilters(_options) {\n    if (_options === void 0) {\n      _options = {};\n    }\n\n    this._options = _options;\n    /**\n     * @inheritDoc\n     */\n\n    this.name = InboundFilters.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      var hub = getCurrentHub();\n\n      if (!hub) {\n        return event;\n      }\n\n      var self = hub.getIntegration(InboundFilters);\n\n      if (self) {\n        var client = hub.getClient();\n        var clientOptions = client ? client.getOptions() : {};\n\n        var options = self._mergeOptions(clientOptions);\n\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n\n      return event;\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._shouldDropEvent = function (event, options) {\n    if (this._isSentryError(event, options)) {\n      logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    return false;\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isSentryError = function (event, options) {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return event && event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].type === 'SentryError' || false;\n    } catch (_oO) {\n      return false;\n    }\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isIgnoredError = function (event, options) {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(function (message) {\n      // Not sure why TypeScript complains here...\n      return options.ignoreErrors.some(function (pattern) {\n        return isMatchingPattern(message, pattern);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isDeniedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? false : options.denyUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isAllowedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? true : options.allowUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._mergeOptions = function (clientOptions) {\n    if (clientOptions === void 0) {\n      clientOptions = {};\n    }\n\n    return {\n      allowUrls: __spread(this._options.whitelistUrls || [], this._options.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),\n      denyUrls: __spread(this._options.blacklistUrls || [], this._options.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),\n      ignoreErrors: __spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true\n    };\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getPossibleEventMessages = function (event) {\n    if (event.message) {\n      return [event.message];\n    }\n\n    if (event.exception) {\n      try {\n        var _a = event.exception.values && event.exception.values[0] || {},\n            _b = _a.type,\n            type = _b === void 0 ? '' : _b,\n            _c = _a.value,\n            value = _c === void 0 ? '' : _c;\n\n        return [\"\" + value, type + \": \" + value];\n      } catch (oO) {\n        logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n        return [];\n      }\n    }\n\n    return [];\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getEventFilterUrl = function (event) {\n    try {\n      if (event.stacktrace) {\n        var frames_1 = event.stacktrace.frames;\n        return frames_1 && frames_1[frames_1.length - 1].filename || null;\n      }\n\n      if (event.exception) {\n        var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return frames_2 && frames_2[frames_2.length - 1].filename || null;\n      }\n\n      return null;\n    } catch (oO) {\n      logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.id = 'InboundFilters';\n  return InboundFilters;\n}();\n\nexport { InboundFilters };","map":{"version":3,"sources":["../../src/integrations/inboundfilters.ts"],"names":[],"mappings":"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","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}