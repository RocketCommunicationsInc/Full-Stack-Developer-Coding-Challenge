{"ast":null,"code":"import { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { LOGOUT } from \"../actionTypes\";\nexport default function UsersReducer(state = {\n  loggedIn: false,\n  currentUser: {\n    current: {},\n    valid: true,\n    authCompleted: false,\n    errors: {}\n  }\n}, action) {\n  switch (action.type) {\n    case AUTH_FAILURE:\n      return { ...state,\n        loggedIn: false,\n        currentUser: action.payload.currentUser\n      };\n\n    case AUTH_SUCCESS:\n      return { ...state,\n        loggedIn: true,\n        currentUser: action.payload.currentUser\n      };\n\n    case LOGOUT:\n      return { ...state,\n        loggedIn: false,\n        currentUser: {}\n      };\n\n    default:\n      return state;\n  }\n}\n_c = UsersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersReducer\");","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/UsersReducer.js"],"names":["AUTH_SUCCESS","AUTH_FAILURE","LOGOUT","UsersReducer","state","loggedIn","currentUser","current","valid","authCompleted","errors","action","type","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,eAAe,SAASC,YAAT,CACdC,KAAK,GAAG;AACPC,EAAAA,QAAQ,EAAE,KADH;AAEPC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,IAAtB;AAA4BC,IAAAA,aAAa,EAAE,KAA3C;AAAkDC,IAAAA,MAAM,EAAE;AAA1D;AAFN,CADM,EAKdC,MALc,EAMb;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,YAAL;AACC,aAAO,EACN,GAAGG,KADG;AAENC,QAAAA,QAAQ,EAAE,KAFJ;AAGNC,QAAAA,WAAW,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHtB,OAAP;;AAKD,SAAKN,YAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENC,QAAAA,QAAQ,EAAE,IAFJ;AAGNC,QAAAA,WAAW,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHtB,OAAP;;AAMD,SAAKJ,MAAL;AACC,aAAO,EACN,GAAGE,KADG;AAENC,QAAAA,QAAQ,EAAE,KAFJ;AAGNC,QAAAA,WAAW,EAAE;AAHP,OAAP;;AAMD;AACC,aAAOF,KAAP;AAtBF;AAwBA;KA/BuBD,Y","sourcesContent":["import { AUTH_SUCCESS, AUTH_FAILURE } from \"../actionTypes\";\nimport { LOGOUT } from \"../actionTypes\";\n\nexport default function UsersReducer(\n\tstate = {\n\t\tloggedIn: false,\n\t\tcurrentUser: { current: {}, valid: true, authCompleted: false, errors: {} },\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase AUTH_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedIn: false,\n\t\t\t\tcurrentUser: action.payload.currentUser,\n\t\t\t};\n\t\tcase AUTH_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedIn: true,\n\t\t\t\tcurrentUser: action.payload.currentUser,\n\t\t\t};\n\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedIn: false,\n\t\t\t\tcurrentUser: {},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}