{"ast":null,"code":"/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\nimport { __assign } from \"tslib\"; // global reference to slice\n\nvar UNKNOWN_FUNCTION = '?'; // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i; // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\n\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/; // Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\n\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\nexport function computeStackTrace(ex) {\n  var stack = null;\n  var popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {// no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {// no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true\n  };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\n\nfunction computeStackTraceFromStackProp(ex) {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  var stack = [];\n  var lines = ex.stack.split('\\n');\n  var isEval;\n  var submatch;\n  var parts;\n  var element;\n\n  for (var i = 0; i < lines.length; ++i) {\n    if (parts = chrome.exec(lines[i])) {\n      var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n\n        parts[3] = submatch[2]; // line\n\n        parts[4] = submatch[3]; // column\n      }\n\n      element = {\n        // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n        // prefix here seems like the quickest solution for now.\n        url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null\n      };\n    } else if (parts = winjs.exec(lines[i])) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null\n      };\n    } else if (parts = gecko.exec(lines[i])) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || \"eval\";\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = ex.columnNumber + 1;\n      }\n\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack: stack\n  };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction computeStackTraceFromStacktraceProp(ex) {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  } // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n\n\n  var stacktrace = ex.stacktrace;\n  var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  var lines = stacktrace.split('\\n');\n  var stack = [];\n  var parts;\n\n  for (var line = 0; line < lines.length; line += 2) {\n    var element = null;\n\n    if (parts = opera10Regex.exec(lines[line])) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null\n      };\n    } else if (parts = opera11Regex.exec(lines[line])) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2]\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack: stack\n  };\n}\n/** Remove N number of frames from the stack */\n\n\nfunction popFrames(stacktrace, popSize) {\n  try {\n    return __assign(__assign({}, stacktrace), {\n      stack: stacktrace.stack.slice(popSize)\n    });\n  } catch (e) {\n    return stacktrace;\n  }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  return message;\n}","map":{"version":3,"sources":["../src/tracekit.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex: any): StackTrace {\n  let stack = null;\n  let popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n        // prefix here seems like the quickest solution for now.\n        url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}