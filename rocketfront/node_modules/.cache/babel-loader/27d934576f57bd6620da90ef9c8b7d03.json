{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/UsersActions\";\n\nclass AlertDisplay extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props !== prevProps) {\n      this.props.getAlerts();\n    }\n  }\n\n  render() {\n    return this.props.alerts;\n  }\n\n}\n\nconst mSTP = state => {\n  return {\n    alerts: state.alerts\n  };\n};\n\nconst mDTP = dispatch => {\n  return {\n    getAlerts: info => dispatch(getAlerts(info))\n  };\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);","map":{"version":3,"sources":["/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js"],"names":["React","Component","Redirect","Link","connect","getAlerts","AlertDisplay","constructor","props","componentDidMount","prevProps","render","alerts","mSTP","state","mDTP","dispatch","info"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA;;AAEDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKF,KAAL,KAAeE,SAAnB,EAA8B;AAC7B,WAAKF,KAAL,CAAWH,SAAX;AACA;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKH,KAAL,CAAWI,MAAlB;AACA;;AAbmC;;AAgBrC,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvB,SAAO;AACNF,IAAAA,MAAM,EAAEE,KAAK,CAACF;AADR,GAAP;AAGA,CAJD;;AAMA,MAAMG,IAAI,GAAIC,QAAD,IAAc;AAC1B,SAAO;AACNX,IAAAA,SAAS,EAAGY,IAAD,IAAUD,QAAQ,CAACX,SAAS,CAACY,IAAD,CAAV;AADvB,GAAP;AAGA,CAJD;;AAKA,eAAeb,OAAO,CAACS,IAAD,EAAOE,IAAP,CAAP,CAAoBT,YAApB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/UsersActions\";\n\nclass AlertDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getAlerts();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn this.props.alerts;\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\talerts: state.alerts,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetAlerts: (info) => dispatch(getAlerts(info)),\n\t};\n};\nexport default connect(mSTP, mDTP)(AlertDisplay);\n"]},"metadata":{},"sourceType":"module"}