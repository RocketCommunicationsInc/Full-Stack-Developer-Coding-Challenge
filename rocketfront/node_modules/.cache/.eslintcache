[{"/home/mimirandi21/code/projects/rocketman/src/index.js":"1","/home/mimirandi21/code/projects/rocketman/src/App.js":"2","/home/mimirandi21/code/projects/rocketman/src/reportWebVitals.js":"3","/home/mimirandi21/code/projects/rocketman/src/components/Login.js":"4","/home/mimirandi21/code/projects/rocketman/src/components/Signup.js":"5","/home/mimirandi21/code/projects/rocketman/src/containers/Home.js":"6","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/index.js":"7","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/reportWebVitals.js":"8","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/App.js":"9","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/Login.js":"10","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/Signup.js":"11","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/store.js":"12","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/AlertsReducer.js":"13","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/SatellitesReducer.js":"14","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/UsersReducer.js":"15","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actionTypes.js":"16","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Main.js":"17","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js":"18","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Session.js":"19","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/NavBar.js":"20","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js":"21","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js":"22","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/AlertsActions.js":"23","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/SatellitesActions.js":"24"},{"size":500,"mtime":1617147646530,"results":"25","hashOfConfig":"26"},{"size":1787,"mtime":1617205457800,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1617147646530,"results":"28","hashOfConfig":"26"},{"size":2089,"mtime":1617153983670,"results":"29","hashOfConfig":"26"},{"size":2314,"mtime":1617153933340,"results":"30","hashOfConfig":"26"},{"size":832,"mtime":1617204578596,"results":"31","hashOfConfig":"26"},{"size":1026,"mtime":1617351479450,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1617217607470,"results":"34","hashOfConfig":"33"},{"size":1026,"mtime":1617351606290,"results":"35","hashOfConfig":"33"},{"size":3330,"mtime":1617350796000,"results":"36","hashOfConfig":"33"},{"size":3177,"mtime":1617349304440,"results":"37","hashOfConfig":"33"},{"size":631,"mtime":1617239262110,"results":"38","hashOfConfig":"33"},{"size":437,"mtime":1617260871970,"results":"39","hashOfConfig":"33"},{"size":469,"mtime":1617260961410,"results":"40","hashOfConfig":"33"},{"size":595,"mtime":1617349755050,"results":"41","hashOfConfig":"33"},{"size":374,"mtime":1617344338060,"results":"42","hashOfConfig":"33"},{"size":1490,"mtime":1617350746010,"results":"43","hashOfConfig":"33"},{"size":2214,"mtime":1617350428050,"results":"44","hashOfConfig":"33"},{"size":1453,"mtime":1617351987310,"results":"45","hashOfConfig":"33"},{"size":1149,"mtime":1617311791780,"results":"46","hashOfConfig":"33"},{"size":3011,"mtime":1617336859190,"results":"47","hashOfConfig":"33"},{"size":3626,"mtime":1617340139500,"results":"48","hashOfConfig":"33"},{"size":305,"mtime":1617326311610,"results":"49","hashOfConfig":"33"},{"size":279,"mtime":1617326321570,"results":"50","hashOfConfig":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"bfeb1a",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zezcqo",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/mimirandi21/code/projects/rocketman/src/index.js",[],["104","105"],"/home/mimirandi21/code/projects/rocketman/src/App.js",["106","107"],"/home/mimirandi21/code/projects/rocketman/src/reportWebVitals.js",[],"/home/mimirandi21/code/projects/rocketman/src/components/Login.js",[],"/home/mimirandi21/code/projects/rocketman/src/components/Signup.js",[],"/home/mimirandi21/code/projects/rocketman/src/containers/Home.js",["108"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/index.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/reportWebVitals.js",[],["109","110"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/App.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/Login.js",["111"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/Signup.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/store.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/AlertsReducer.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/SatellitesReducer.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/reducers/UsersReducer.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actionTypes.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Main.js",["112"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/UsersActions.js",["113","114"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/containers/Session.js",["115","116"],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/NavBar.js",["117","118"],"import React, { Component } from \"react\";\nimport { RuxClock } from \"@astrouxds/rux-clock/rux-clock.js\";\nimport { RuxGlobalStatusBar } from \"@astrouxds/rux-global-status-bar/rux-global-status-bar.js\";\nimport { connect } from \"react-redux\";\n\nclass NavBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttime: new Date().toLocaleString(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalID = setInterval(() => this.tick(), 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\ttime: new Date().toLocaleString(),\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"grid-zone grid-zone--header\">\n\t\t\t\t<rux-global-status-bar\n\t\t\t\t\tclassName=\"rux-global-staus-bar\"\n\t\t\t\t\tappname=\"The Final Frontier\"\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t>\n\t\t\t\t\t<rux-clock class=\"dark-theme\" small>\n\t\t\t\t\t\t{this.state.time}\n\t\t\t\t\t</rux-clock>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.props.user.username}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<a href=\"/logout\">Log Out</a>\n\t\t\t\t\t</div>\n\t\t\t\t</rux-global-status-bar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\tuser: state.users.currentUser,\n\t};\n};\n\nexport default connect(mSTP)(NavBar);\n","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/AlertDisplay.js",["119"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAlerts } from \"../redux/actions/AlertsActions\";\nimport { RuxStatus } from \"@astrouxds/rux-status/rux-status.js\";\n\nclass AlertDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearch: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getAlerts();\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t};\n\n\thandleSearch = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t\tthis.filterContacts();\n\t};\n\n\tfindDistinctCategories() {\n\t\tlet distinct = [...new Set(this.props.alerts.map((a) => a.errorCategory))];\n\t\treturn distinct;\n\t}\n\n\tfilterContacts() {\n\t\tif (this.state.search === \"\" || !this.state.search) {\n\t\t\treturn this.props.alerts;\n\t\t}\n\n\t\treturn this.props.alerts.filter((a) => {\n\t\t\treturn a.errorCategory.includes(this.state.search);\n\t\t});\n\t}\n\n\tconvertTime(time) {\n\t\tlet convTime = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(time);\n\t\treturn convTime;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"grid-zone grid-zone--sidebar\">\n\t\t\t\t<div className=\"grid-zone-sidebar__subheader\">\n\t\t\t\t\t<h2 className=\"alert-title\">Alerts</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"alert-summary\">\n\t\t\t\t\t\t\t<h1>{this.props.alerts.length}</h1> Total Alerts\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"rux-form-field-div-search\">\n\t\t\t\t\t\t\t<div className=\"rux-form-field search\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"rux-form-field__text-input search\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search by category\"\n\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div class=\"alert-filter\">\n\t\t\t\t\t\t\t<label class=\"classy\" for=\"categoryFilter\">\n\t\t\t\t\t\t\t\tCategory Filter\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass=\"rux-select\"\n\t\t\t\t\t\t\t\tid=\"category-filter\"\n\t\t\t\t\t\t\t\tonChange={this.handleSearch}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\">All</option>\n\t\t\t\t\t\t\t\t{this.findDistinctCategories().map((cat) => {\n\t\t\t\t\t\t\t\t\treturn <option value={cat}>{cat}</option>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<table className=\"rux-table\">\n\t\t\t\t\t<tr className=\"rux-table__column-head\">\n\t\t\t\t\t\t<th>Category</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Message</th>\n\t\t\t\t\t\t<th>Time</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{this.filterContacts().map((alert) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{alert.errorCategory}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<rux-status status={alert.errorSeverity}></rux-status>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{alert.errorMessage}</td>\n\t\t\t\t\t\t\t\t<td>{this.convertTime(alert.errorTime)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\talerts: state.alerts.alerts,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetAlerts: (info) => dispatch(getAlerts(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(AlertDisplay);\n","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/components/SatDisplay.js",["120"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSatellites } from \"../redux/actions/SatellitesActions\";\nimport { RuxStatus } from \"@astrouxds/rux-status/rux-status.js\";\n\nclass SatDisplay extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearch: \"\",\n\t\t\tfiltered: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount(prevProps) {\n\t\tif (this.props !== prevProps) {\n\t\t\tthis.props.getSatellites();\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value,\n\t\t});\n\t};\n\n\thandleSearch = (e) => {\n\t\tthis.setState({\n\t\t\tfiltered: e.target.value,\n\t\t});\n\t\tconsole.log(this.state);\n\t\tthis.filterContacts();\n\t};\n\n\tfilterContacts() {\n\t\t// if (this.state.search === \"\" || !this.state.search) {\n\t\t// \treturn this.props.satellites;\n\t\t// }\n\n\t\treturn this.props.satellites.filter((s) => {\n\t\t\treturn (\n\t\t\t\ts.contactName.toString().includes(this.state.search) &&\n\t\t\t\ts.contactState.includes(this.state.filtered)\n\t\t\t);\n\t\t});\n\t}\n\n\tconvertTime(time) {\n\t\tlet convTime = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(time);\n\t\treturn convTime;\n\t}\n\n\tfindDistinctStates() {\n\t\tlet distinct = [\n\t\t\t...new Set(this.props.satellites.map((s) => s.contactState)),\n\t\t];\n\t\treturn distinct;\n\t}\n\tcountStates = (st) => {\n\t\tlet sum = this.props.satellites.filter((s) => s.contactState === st);\n\t\treturn sum.length;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"grid-zone grid-zone--main\">\n\t\t\t\t<div className=\"grid-zone-main__subheader\">\n\t\t\t\t\t<h2 className=\"contact-title\">Contacts</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"contact-summary\">\n\t\t\t\t\t\t\t<h1>{this.props.satellites.length}</h1> Total Contacts\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{this.findDistinctStates().map((ds) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"contact-summary\" id={ds}>\n\t\t\t\t\t\t\t\t\t<h1>{this.countStates(ds)}</h1>\n\t\t\t\t\t\t\t\t\t{ds}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t{/* <div className=\"contact-summary\">\n\t\t\t\t\t\t\t<h1>{this.findDistinctStates()}</h1> Contact States\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"rux-form-field-div-search\">\n\t\t\t\t\t\t\t<div className=\"rux-form-field search\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"rux-form-field__text-input search\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search by name\"\n\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"alert-filter\">\n\t\t\t\t\t\t\t<label class=\"classy\" for=\"stateFilter\">\n\t\t\t\t\t\t\t\tState Filter\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclass=\"rux-select\"\n\t\t\t\t\t\t\t\tid=\"state-filter\"\n\t\t\t\t\t\t\t\tonChange={this.handleSearch}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\">All</option>\n\t\t\t\t\t\t\t\t{this.findDistinctStates().map((st) => {\n\t\t\t\t\t\t\t\t\treturn <option value={st}>{st}</option>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<table className=\"rux-table\">\n\t\t\t\t\t<tr className=\"rux-table__column-head\">\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Begin</th>\n\t\t\t\t\t\t<th>End</th>\n\t\t\t\t\t</tr>\n\n\t\t\t\t\t{this.filterContacts().map((sat) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{sat.contactName}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<rux-status status={sat.contactStatus}></rux-status>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{this.convertTime(sat.contactBeginTimestamp)}</td>\n\t\t\t\t\t\t\t\t<td>{this.convertTime(sat.contactEndTimestamp)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mSTP = (state) => {\n\treturn {\n\t\tsatellites: state.satellites.satellites,\n\t};\n};\n\nconst mDTP = (dispatch) => {\n\treturn {\n\t\tgetSatellites: (info) => dispatch(getSatellites(info)),\n\t};\n};\n\nexport default connect(mSTP, mDTP)(SatDisplay);\n","/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/AlertsActions.js",[],"/home/mimirandi21/code/projects/Full-Stack-Developer-Coding-Challenge-1/rocketfront/src/redux/actions/SatellitesActions.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"129","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"130","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"121","replacedBy":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"134","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":18},{"ruleId":"125","severity":1,"message":"135","line":4,"column":13,"nodeType":"127","messageId":"128","endLine":4,"endColumn":20},{"ruleId":"125","severity":1,"message":"136","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"134","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18},{"ruleId":"125","severity":1,"message":"137","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"130","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":28},{"ruleId":"125","severity":1,"message":"138","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":19},{"ruleId":"125","severity":1,"message":"138","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":19},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","'RuxGlobalStatusBar' is defined but never used.",["139"],["140"],"'Redirect' is defined but never used.","'RuxModal' is defined but never used.","'Cookies' is defined but never used.","'useAlert' is defined but never used.","'RuxClock' is defined but never used.","'RuxStatus' is defined but never used.","no-global-assign","no-unsafe-negation"]