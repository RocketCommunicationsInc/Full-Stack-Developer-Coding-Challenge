{"version":3,"sources":["components/AccountForm.js","components/SignupSignin.js","components/Dashboard.js","logo.svg","App.js","utils/api.js","reportWebVitals.js","index.js"],"names":["AccountForm","props","className","title","children","class","size","onClick","onSubmit","submitButtonText","SignupSignin","type","Dashboard","App","React","useState","setIsLoggedIn","path","username","password","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","data","console","log","localStorage","setItem","token","api","methods","user","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAwBeA,MApBf,SAAqBC,GAKnB,OACE,uBAAMC,UAAU,eAAhB,UACE,oBAAIA,UAAU,sBAAd,SAAqCD,EAAME,QAC1CF,EAAMG,SACP,4BACEC,MAAM,yDACNC,KAAK,QACLC,QAXe,WACnBN,EAAMO,YAOJ,SAKGP,EAAMQ,uB,MCEAC,MAhBf,SAAsBT,GACpB,OACE,qBAAKC,UAAU,kBAAf,SACE,eAAC,EAAD,CAAaC,MAAOF,EAAME,MAAOM,iBAAkBR,EAAME,MAAOK,SAAUP,EAAMO,SAAhF,UACE,6CACA,uBAAOG,KAAK,SAEZ,6CACA,uBAAOA,KAAK,aAEXV,EAAMG,eCJAQ,MARf,SAAoBX,GAChB,OACI,mCACI,iDCLG,I,MCgEAY,MAnDf,WAAgB,IAAD,EACuBC,IAAMC,UAAS,GADtC,mBACMC,GADN,WAqBb,OACE,qBAAKd,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,UAAZ,SACE,cAAC,EAAD,CAAcd,MAAM,UAAUK,SAbjB,SAACU,EAAUC,ICRnB,SAACD,EAAUC,GACxB,OAAOC,MAAM,+BAAgC,CAC3CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAER,WAAUC,eAEhCQ,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAGdH,MAAK,SAACI,GAEL,GADEC,QAAQC,IAAI,OAAQF,GAClBA,EAEF,OADAG,aAAaC,QAAQ,QAASJ,EAAKK,OAC5BL,MDTXM,CAAWnB,EAAUC,GAAUQ,MAAK,SAACI,GAC/BA,EAAKK,OACPpB,GAAc,WAad,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,eAAC,EAAD,CAAcd,MAAM,UAAUK,SA1BjB,SAACU,EAAUC,ICdnB,SAACD,EAAUC,GACxB,OAAOC,MAAM,+BAAgC,CAC3CkB,QAAS,OACThB,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAER,WAAUC,eAChCQ,MAAK,SAACC,GACP,GAAIA,EAAIC,GACN,OAAOD,EAAIE,WDKbO,CAAWnB,EAAUC,GAAUQ,MAAK,SAACY,GAC/BA,GACFvB,GAAc,OAuBZ,UACE,qDACA,uBAAOL,KAAK,kBAIhB,cAAC,IAAD,CAAOM,KAAK,aAAZ,SACE,cAAC,EAAD,MAOF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUuB,GAAG,oBE7CRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c042fe88.chunk.js","sourcesContent":["import React from 'react';\r\nimport { RuxButton } from '@astrouxds/rux-button/rux-button.js';\r\nimport './AccountForm.css';\r\n\r\nfunction AccountForm(props) {\r\n  const handleSubmit = () => {\r\n    props.onSubmit();\r\n  };\r\n\r\n  return (\r\n    <form className='account-form'>\r\n      <h2 className='account-form__title'>{props.title}</h2>\r\n      {props.children}\r\n      <rux-button\r\n        class='rux-button--buttonBackgroundColor account-form__submit'\r\n        size='large'\r\n        onClick={handleSubmit}\r\n      >\r\n        {props.submitButtonText}\r\n      </rux-button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AccountForm;\r\n","import React from 'react';\r\nimport AccountForm from './AccountForm';\r\nimport './Login.css';\r\n\r\nfunction SignupSignin(props) {\r\n  return (\r\n    <div className='login-container'>\r\n      <AccountForm title={props.title} submitButtonText={props.title} onSubmit={props.onSubmit}>\r\n        <label>Username</label>\r\n        <input type='text' />\r\n\r\n        <label>Password</label>\r\n        <input type='password' />\r\n\r\n        {props.children}\r\n      </AccountForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupSignin;\r\n","import React from 'react'\r\n\r\nfunction Dashboard (props) {\r\n    return (\r\n        <>\r\n            <h1>hello worlds</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { RuxButton } from '@astrouxds/rux-button/rux-button.js';\n\nimport AccountForm from './components/AccountForm';\nimport SignupSignin from './components/SignupSignin';\nimport Dashboard from './components/Dashboard';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport * as api from './utils/api';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const handleSignUp = (username, password) => {\n    api.signUp(username, password).then((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        return;\n      }\n    });\n  };\n\n  const handleSignIn = (username, password) => {\n    api.signIn(username, password).then((data) => {\n      if (data.token) {\n        setIsLoggedIn(true);\n        return;\n      }\n    });\n  };\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/signin'>\n          <SignupSignin title='Sign In' onSubmit={handleSignIn} />\n        </Route>\n\n        <Route path='/signup'>\n          <SignupSignin title='Sign Up' onSubmit={handleSignUp}>\n            <label>Confirm Password</label>\n            <input type='password' />\n          </SignupSignin>\n        </Route>\n\n        <Route path='/dashboard'>\n          <Dashboard />\n        </Route>\n\n        {/* <Route exact path='/'>\n          {isLoggedIn ? <Redirect to='/dashboard' /> : }\n        </Route> */}\n\n        <Route path='*'>\n          <Redirect to='/signin' />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const baseUrl = '';\r\n\r\nconst signUp = (username, password) => {\r\n  return fetch(`http://localhost:3000/signup`, {\r\n    methods: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ username, password })\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n  });\r\n};\r\n\r\nconst signIn = (username, password) => {\r\n  return fetch(`http://localhost:3000/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ username, password })\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .then((data) => {\r\n        console.log(\"data\", data)\r\n      if (data) {\r\n        localStorage.setItem('token', data.token);\r\n        return data;\r\n      }\r\n    });\r\n};\r\n\r\nexport { signUp, signIn };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}